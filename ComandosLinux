Comandos FORA do terminal Linux:

Crtl+H: Usado em um diretório ele mostrará os arquivos ocultos.

Comandos no terminal Linux:

cat /etc/shells: Vai listar todos os Shells instalados na sua máquina.

--- Pipe "|"

É um operador onde consegue juntar 2 comandos ou mais exemplo: fortune | cowsay. Esse comomando ira fazer o fortune que é um programa de gerar frases falar essa frase no Cowsay.
E assim gerando uma Pipeline que é essa linha de pipes.

* O operador && é um operador de curto-circuito condicional. Ele executa o próximo comando somente se o comando anterior for bem-sucedido (ou seja, se retornar um código de saída 0). Se o primeiro comando falhar (retornar um código de saída diferente de 0), os comandos subsequentes não serão executados. *

* O ponto e vírgula ; é um operador de sequência. Ele simplesmente executa os comandos em sequência, independentemente do sucesso ou falha de cada comando. Isso significa que o segundo comando será executado independentemente do resultado do primeiro. *

cat /proc/cpuinfo: Vai retornar informações da minha CPU


--- Comandos de Atalhos

Crtl+Alt+T: Abre o terminal
Crtl+L: Limpa o terminal
Crtl+U: Apaga toda a linha que voce esta digitando
Crtl+D: Se voce entrar em alguma maquina, virar root, etc, o Crtl+D vai voltar um acesso antes, se n tiver dentro de nenhum acesso ele fecha o terminal.
Crtl+Shift+T: Abre mais uma aba de terminal.
Tab: Completa a palavra que você esta digitando

--- Manual de comandos e ajuda
- man <comando>: Exibe o manual do comando, (exemplo: man uname), vai exibir todo manual do uname
- info <comando>: Diferente do man, o info ele tras algumas informações de resultado como output.
- <comando> --help: Abrirá a ajuda das outras variações do que o comando faz.
- whatis <comando>: Ele fala de forma grosseiramente curta o que o comando significa.

--- Informações do Sistema Operacional, Hardware e quem esta logado.
- uname -a: Exibe todas as informações do sistema
- neofetch: Mostra todas as informações de sistema e Hardware	
- who: Exibe quem está logado no momento
- whoami: Exibe quem eu sou.
- w: Exibe quem esta logado e mais informações

-- Repetir o comando passado

!! = Vai repetir o comando passado, é interessante caso precisa acrescentar algo tbm (ex: sudo !!) no caso fiz um comando que precisava de permissão ai eu fiz sudo e repeti o codigo !!

--- Downloads, instalações, listar atualizações, baixar e instalar atualizações, baixar arquivos da net para o pc local e desinstalação (APT, APT-CACHE e DPKG)

- sudo apt install <pacote>: Ele busca o pacote nos repositórios oficiais do seu Linux, e caso ele exista, também busca as dependências dele, Então ele BAIXA esses pacotes (que vem com a extensão .deb) e  os INSTALA com o dpkg por baixo dos panos, LEMBRE-SE consigo baixar a dependencia solo, basta colocar o nome da dependencia no lugar do <pacote>
- sudo apt update: Atualiza as informações de software do seu PC
- sudo apt upgrade: Atualiza todos os softwares.
- sudo apt remove <nome_do_programa>: Desinstala o programa que você quiser, que foi instalado em apt.
- sudo apt update: Atualiza informações de software do seu PC, ele fica apenas CIENTE que tem atualizações como ele mapeasse as coisas novas, porém ele nao baixa e nem instala essas atualizações.
- sudo apt upgrade: Atualiza todos os softwares, usar após o APT UPDATE para listar as novas atualizações, ai damos um UPGRADE para baixar e instalar as novas atualizações.
- sudo apt --only-upgrade install google-chrome-stable: Ira atualizar somente um programa, no caso coloquei o google no exemplo.
- sudo apt update && sudo apt upgrade: É igual programação && significa "and", ira listar as atualizações do repositório e depois ira baixar e instalar as atualizações.

- sudo apt-cache search <pacote>: Procura os pacotes pelo nome, ai vai mostrar os pacotes disponiveis.
- sudo apt-cache show <pacote>: Mostrará as informações do pacote que você está pesquisando.

- sudo dpkg -i <pacote.deb>: Ira INSTALAR o pacote que vc fez download do (.deb) então ele instala esse arquivo LOCAL de seu PC, o -i é install package file.
- sudo dpkg -r <pacote.deb>: Irá REMOVER o pacote, -r é remove package file.
- sudo dpkg --purge <pacote. deb>: Irá REMOVER o pacotE e tambem REMOVERÁ TODOS OS RESTÍGIOS., caches e tudo mais (MAIS RECOMENDADO)
- sudo dpkg -l: Lista todos os pacotes instalados.

- sudo snap install <programa>: Vai baixar e instalar o app pela snap-store
- sudo snap remove --purge <programa>: Vai desinstalar o programa por completo pela snap-store
- sudo snap refresh --list: Vai listar todos os apps com possibilidade de atualização
- sudo snap refresh: Vai atualizar todos os programas, porém voce consegue listar um app em especifico para atualizar ex: (sudo snap refresh <firefox>)

- wget <url>: Vai baixar a página para o seu PC (BAIXA NO DIRETORIO ATUAL)

--- Descompactar

unzip <pacote>: Vai descompactar pacotes.zip

--- Troca de usuário, criar usuário, trocar senha do usuário, excluir usuário, adicionar grupo, excluir grupo e execução sudo e Modo root

- su <usuario>: permite a troca de usuario, exemplo: su <ithalo>.
- sudo adduser <nome_usuario>: Ele cria um novo usuário e um grupo com o mesmo nome. (Usuario vai para a home e os vai para /etc/passwd e /etc/group)
- sudo userdel -r <nome_usuario>: Vai removar o usuário e seus grupos
- passwd: muda a senha de usuario ou caso não tiver, cria uma senha
- sudo passwd <usuario_desejado>: Muda a senha do usuário porém especifica qual usuario ou cria uma senha para o usuario
- sudo addgroup <nome_grupo>: Ele vai criar um novo grupo. (O Grupo vai para /etc/group)
- sudo groupdel <nome_grupo>: ELe vai remover o grupo especificado.
- sudo: é chamado para que um determinado comando seja executado como privilégio de super usuário, como fosse o administrador do Windows. sudo (super user direct order OU super user do)
- sudo su: entra no modo root, super usuario, caso queira executar como super usuario sem ativar modo root, só digitar sudo <comando>

--- Outros comandos relacionado a permissões, grupos, usuários

- id ou id <usuario>: Lista o seu UIG, GID e os grupos que você está ou lista o UIG, GID e o grupo do usuário que você desejou.
- chown <usuario> <arquivo/pasta>: Troca o usuário ou grupo dono de um arquivo ou diretório. (Exemplo; "sudo chown daniel server.js"), ("sudo chown daniel:devops servers.js"), ("sudo chown :devops server.js")
- userdel: Deleta o usuário e o seu grupo, mas não deleta seus arquivos, nem sua home exemplo: "userdel giovanna". Para remover todos os arquivos junto coloque a opção "userdel -r giovanna"
- usermod: Modifica a conta do usuário. Geralmente é usado para adicionar um usuário a um grupo. ExemplO.: "usermod -aG sudo giovanna" para trocar grupo primeiro usamos o "usermod -g sudo giovanna"
- deluser <usuario> <grupo>: Tira úsuario de um grupo. Exemplo.: "deluser luisa devops"
- gpasswd -d <usuario> <grupo>: Caso o comando acima não funcionar, tente esse. Depende cada distro.
- groupdel: Deleta o grupo desejado.
- chmod u="",g="",o="" <arquivo ou diretorio>: Permite trocar as permissões dos arquivos ou diretorios, (exemplo: sudo chmod u="rwx",g="rwx",o= "rwx"), u(usuario owner),g(grupo) e o(other)
- chmod u+permissoes: Nesse tipo conseguimos adicionar e retirar permissoes de forma mais facil (exemplo: o+rwx | Eu adicionei no other = rwx) (exemplo: o-rwx | Eu removi no others no = rwx)
- chmod 000 <arquivo ou diretório>: Permite trocar as permiessoes de arquivos ou diretorios, (exemplo: chmod 755 giovanna), a diferença entre o de cima é que esse é usado no formato octal (IMAGEM NA PASTA)

--- Navegação de diretório
- "cd /": Vai para o diretório raiz.
- "cd" ou "cd ~": Vai para a home usuario, se vc ve ~ saiba que vc ta no seu usuario.
- "cd ..": Vai para um diretório antes do atual, ../.. irá dois diretorios antes, e assim consecutivamente.
- " cd - ": Vai para o último diretório que vocês estava, ai em vez de digitar tudo dnv o antigo endereço, é só digitar cd -, que ele volta.

--- Desligar e Reiniciar computador

- shutdown now: desliga o computador instantaneamente
- shutdown: desliga o pc dentro de 60 segundos
- shutdown hh:mm (ex: shutdown 12:00): Desliga o PC de forma agendada conforme o parametro passado
- shutdown +m (ex: shutdown +20): Vai desligar dentro do tempo que você passar, o +m significa minuto
- shutdown +m "Mensagem desejada": A ideia é a mesma do comando acima, a unica diferença será a mensagem mostrada
- OBS Sobre o shutdown: se colocar -r na frente será para reinicialização, -p desliga o sistema (também desliga a unidade).

--- Comparação de tamanho de arquivo
- cmp <arquivo1> <arquivo2>: compara o tamanho dos arquivos

--- Compara as modificações do arquivo
- diff <arquivo1> <arquivo2>: Compara linha por linha entre os dois arquivos e mostra as respectivas diferenças
- diff -u <arquivo1> <arquivo2>: Ele mostra de forma mais humana as diferenças de conteudo, igualzinho como o Git mostra quando comparamos a versão antiga com a atual.
- diff -b <arquivo1> <arquivo2>: Ignora espaço em branco como possível diferença.
- diff -i <arquivo1> <arquivo2>: Ele passa a não diferençar caracteres maiusculo e minúsculos.
- diff -q <arquivo1> <arquivo2>: Apenas diz se o arquivo é diferente, ele não trás retorno algum.

--- Calendario, data e hora.
- date: mostra a data atual, horario e o GMT que o sistema esta.
- date +"%d": Mostra o dia
- date +"%m": Mostra o mês
- date +"%y": Mostra o ano
- date +"%d-%m-%y" 
- date -s <mm/dd/yyyy>: altera a data mes, dia e ano.
- date -s <hh:mm:ss>: altera o horario
- cal: mostra o calendario
- ncal: mostra o calendario e o dia que estamos
- timedatectl: Mostra todas as informações acima.
- timedatectl set-local-rtc 1 --adjust-system-clock: Vai deixar o horario do PC local em vez de usar o da nuvem (caso der problema de horario de +3 no windows, USAR esse comando de horario local)

--- Caminho, verificação de arquivos na pasta, localização de arquivo e filtragem.
- pwd: mostra o endereço/caminho que você está.
- which <nome_programa>: Mostra o caminho do programa especificado.
- ls: verifica todos os arquivos, lembre-se tem varintes como ls -la (ve arquivos oculto)
- ls <nome do diretorio>: para mostra o que tem nele, sem entrar (FUNCIONA COM AS OUTRAS VARIAÇÕES ABAIXO).
- ls -a: Mostra TODOS os arquivos até os ocultos, porém não mostra como o -la que no caso seria em linhas, pois o "-l" que faz ficar na forma de lista.
- ls -t: Mostra os arquivos em ordem de tempo de criação
- ls -r: Inverte a ordem.
- ls -h: Usado junto com o parametro "-l" ele mostra as informações como kilobytes, megabytes, gigabytes para facilitar a interpretação humana do tamanho do arquivo.
- ls -l: Mostra os arquivos em ordem de linha e ja com informações de permissões, data de ultima alteração, ordem alfabetica etc.
- ls -la: mostra TODOS os arquivos ja com as permissões, data de ultima alteração, ordem alfabética e o peso dos arquivos. por conta do parametro "-a" = all
- ls -lta: Mostra TODOS os arquivos inclusive ocultos em ordem tempo, por conta da parametro "-t", "-a" = all
- ls -ltr: Mostra os arquivos ja com as permissoes, peso dos arquivos, em ordem de DATA DE ALTERAÇÃO REVERSA, por conta do parametro "-t" = time, -r" = reverse
- ls -lh: mostra os arquivos ja com as permissões, data de alteração, em ordem alfabética e o peso dos arquivos em kilobytes, por conta do parametro "-h" que facilita a visão humana dos números.
- ls --color=auto: Ele vai colocar cores em arquivos respectivamente conforme o seu tipo (terminal ja faz isso automaticamente), temos outras variantes como --color=never para nunca colocar cores
- ls -B: Ele NÃO lista os arquivos Backups (Arquivos backups por convenção são aqueles que termina com "~" ex: teste1~)
- ls <pasta1> <pasta2>: Ele consegue fazer ls consecutivamente em pasta diferentes se você apontar a pasta que deverá ser feito o ls.
- ls -d <pasta1> <pasta2>: Ele consegue filtrar as duas pasta e trazer apenas o ls delas, é igual o | grep
- ls -ln: Ele lista tudo e em vez de trazer o nome do usuario:grupo, ele traz UID:GID no lugar de nome e grupo.
- ls -F: Indica se é link simbolico (atalho@) se é arquivo executavel (executavel*) e se é diretório (diretorio/)
- tree: Mostra toda a estrutura da pasta em formato de arvore
- tree -A: Mostra de forma mais limpa, (USAR SOMENTE SE O TERMINAL MOSTRAR DE FORMA ZOADA)
- tree -h: Vai mostrar o tamanho dos diretórios, de forma humana
- tree <pasta>: Vai mostrar em formato de arvore o que tem no arquivo, lembra o packages do Java.
- find / -name <arquivo_ou_pasta>: Vai procurar no linux inteiro arquivos ou pasta com esse nome, porém ele mostra as saidas de erros, para ficar mais limpo de um 2> /dev/null (COLOCAR SUDO ANTES DO find)
- locate <nome do arquivo>: localiza o arquivo desejado, mostrando o endereço dele.
- grep <Nome da Pesquisa>: Filtra a palavra que voce digitar apos o | grep
- grep -v: Ele inverte o filtro, ele trás tudo exceto o grep q vc mandou.
= grep -i: Ignora maiusculo e minusculo.

--- Criação de diretório, remoção de diretorio e arquivos, e move arquivo.
- mkdir: cria diretórios
- mkdir -p: consegue criar varios diretorios dentro do outro (ex: mkdir diretorio1/diretorio2 e por ai vai)
- rm: Exclui diretorio, arquivos, etc
- rm -i: Ele pergunta antes de fazer a ação de excluir, isso pode trazer maids segurança.
- rm -rf: força a exclusão de arquivos, diretorios, etc
- mv: consegue mover um arquivo ou modificar o nome, (ex mover: mv <arquivo> /endereço), (ex: renomear: mv <arquivo> <novoNomeDeArquivo>)

--- Contagem de linhas, palavras, tamanho do arquivo.

wc <arquivo>: "Word count", como o nome sugere, ele retorna o números de palavras em um arquivo que contem texto
ex: "wc long.txt", resultado: 37 207 1000 long.txt, isso significa: 37 linhas, 207 palavras e 1000 bytes e <nome do arquivo>

wc -w <arquivo>: A diferença do wc é que com o parametro -w, ele mostra apenas a quantidade de PALAVRAS e o NOME.man

wc -l <arquivo>: Conta apenas a quantidade de linhas que o arquivo possui.

--- Copiar
- cp: Faz uma copia seja na mesma pasta, ou em algum outro endereço, -r é para diretorio (ex: cp <nome> <copia>)(ex: cp <nome> /endereço)(copia de diretorio ex: cp -r <nome> <nomedacopia>) (ex: cp -r <nome> /endereço)
- cp -R: O parametro -R ele consegue copiar arquivos de dispositivos, ja o -r ignora os arquivos de dispositivos.
- cp -a: Equivale a cp -dpR, é recomendavel utilizar se for uma copia com exatidão pra evitar problemas, ele copia literalmente da forma mais perfeita, geralmente utilizada pra transferir pra outro linux
- scp (Secure Copy): Mesma função do cp, a diferença fica que é usado para servidores, entao vc consegue jogar de uma maquina local para um servidor.
exemplo de scp: scp <arquivo> <usuario>@<host_maquina>:<caminho>
exemplo de scp se for fazer download: scp <usuario>@<host_maquina>:<caminho> . (PRESTE ATENÇÃO TEM UM . NO FINAL).

--- Consumo de memória, tamanho do arquivo, tamanho de disco, tamanho de block volume e partições de memoria
- free: Mostra a quantidade de GB consumido, lembre-se que tem variantes como, free -m (mb), free -g (gb), etc
- du: Mostra o tamanho do arquivo, diretorio, du -k (kb), du -m (mb), etc
- df: Mostra o tamanho do Disco e suas partiçõe se tiver, lembre-se tem variante como du -h (human), etc
- df -hT -t ext4: Mostra a memoria desde a pasta raiz, logo é a memoria de tudo
- fdisk /dev/<disco>: Comando bastante util para fazer partição de disco, um comando bem rico vale a pena ver com cuidado, quando entrar nele aperte "m" para ter o help de todas as opções.
- fdisk -l /dev/<disco>: Mostra todas as informações do disco e suas partições.
- gdisk /dev/<disco>: Consegue criar GPT (partição de disco) com mais recursos avançados que o fdisk como backup para um arquivo e aparentemente mais simples de fazer.
- parted /dev/<disco>: Consegue fazer assim como os demais (gdisk, fdisk) assim que vc digitar isso, você faz o comando "print" pra ver se tem alguma partição, ai depois da um help para poder saber mexer nele, lembrando que tem o help de cada comando também para ter mais detalhes, o parted tem como configurar até para fazer boot na partição.
- cfdisk /dev/<disco>: Assim como (fdisk, gdisk, parted) ele consegue fazer as partições porém com uma interface no terminal mais simples e grafica, *EU GOSTEI MAIS DESSA FORMA COMPARA AS DEMAIS*
- mkfs.ext4 /dev/<partição>: Comando utilizado para formatar o dispositivo para uso do usuario, lembrando que apaga todos os dados tem q tomar cuidado. *Eu coloquei o .ext4, mas tem outros tipos de formatação*
- mkswap /dev/<partição>: Faz a partição da memoria swap, lembrando que o ideal é deixar a mesma quantidade de memoria RAM, se vc tem 16GB RAM, coloque 16GB de SWAP.
- wipefs -a /dev/<disco>: Comando para refazer a partição de disco.
- lsblk: Mostra o tamanho do Block Volume. 

--- Imprimir mensagem no terminal
- echo "mensagem": ira imprimir no terminal a mensagem que voce mandou após o echo.

--- Ler prosseguindo com teclado. 
- more: Assim como o cat ele mostra o texto do arquivo, porém a diferença é se tiver faltando espaço ele mostra -mais-, ai vc fica apertando enter pra mostrar linha por linha do que falta.
- more -5: vai mostrar a quantidade de linhas que eu pedi, poderia colocar mais linhas ou menos. (ex: more -10 <nome_arquivo> , vai mostrar 10 linhas do arquivo)
- more +5: vai apagar as quantidade de linhas que eu pedi (ex more +10 <nome_arquivo>, vai apagar as dez primeiras linhas do arquivo).
- less: É um upgrade do more, você consegue rolar pra cima e pra baixo com o mouse, diferente do more e consegue colocar um filtro de pesquisa com "/" igual no vim

--- Ler primeiras linhas do arquivo
- head <arquivo>: Mostra as 10 primeiras linhas do arquivo
- head -5 <arquivo>: Mostra as primeiras quantidades de linhas desejadas do arquivo, nesse caso apareceria 5 primeiras linhas

--- Ler ultimas linhas do arquivo e também em tempo real 
- tail <arquivo>: Mostra as 10 ultimas linhas do arquivo
- tail -5: Mostra as ultimas quantidades de linhas desejadas do arquivo, nesse caso apareceria 5 ultimas linhas
- tail -f: Consegue ver as alterações em tempo real no terminal das ultimas 10 linhas.

--- Criar arquivo, editar arquivo e texto, ler arquivo, criar link-simbolico, saida em um arquivo.
- cat: Mostra o texto do arquivo, ou mostra o que tem dentro dele, caso n for texto.
- cat -n: Vai ler o arquivo porém com numero de linhas
- cat -b: Vai ler o arquivo e vai contar o numero de linhas, porém ele ignora as linhas em brancos para contagem.
- nl <arquivo>: Exatamente a mesma coisa que o cat -b acima.
- cat -E: Vai ler o arquivo e coloca um "$" no final de cada linha, assim facilitando se tem espaço em branco no final da linha.
- cat -T: Vai ler o arquivo e identifica cada identeção feita pelo Tab, reconhecida como (^I)
- zcat: Vai ler o arquivo.gz, evitando que precise descompactar para fazer a leitura
- bzcat: Vai ler o arquivo.bz2, evitando que precise descompactar para fazer a leitura
- xzcat: Vai ler o arquivo.xz, evitando que precise descompactar para fazer a leitura
- tac: Vai ler o arquivo com as linhas invertidas.
- <comando> > <novo_arquivo>: Ele consegue subscrever o que o comando fez em um arquivo exemplo: (ls > arquivo), ele apaga toda a informação dentro do arquivo e joga a saída do comando dentro do arquivo.
- <comando> >> <nova_arquivo>: exemplo: (ls >> arquivo)ele vai jogar a saida do ls para esse arquivo, diferente do ">", ele não subscreve o arquivo, ele adiciona a informação com o arquivo preenchido
- grep <palavra_desejada>: Ele serve para abrir igual o cat ja filtrando a palavra certa, ele tambem pode ser usado com outro comando para adicionar filtro com | grep <palavra_desejada>

- touch <arquivo>: é usado para criar arquivos vazios, da para criar varios (ex: touch <arquivo1> <arquivo2> <arquivo3>) nesse exemplo iria criar 3 arquivos vazios
- vim <nome_do_arquivo>: consegue editar o arquivo, porém se não existir aquele arquivo, ele abre o editor e apos salvar ele cria o arquivo.
- nano (quase não uso): consegue editar e criar um arquivo também, porém não muito usado por ser estranho, preferencia as opções acima.
- ln -s <diretorio/arquivo> <nome_do_link_simbolico>: Ira criar um link simbolico daquele endereço que você deseja, desde diretório até arquivos.
- cp -s <diretorio/arquivo> <nome_do_link_simbolico>: Mesma coisa que o ln -s, apenas uma forma diferente.
-- Setagem de comando
- alias: ele é um atalho para fazer um comando apenas digitando poucas coisas	 como, ll ele faz uma coisa e por ai vai.
- alias lsa='ls -ltra': Nesse exemplo criei um alias, onde o lsa será um comando que equivale ao ls -ltra
- unalias <comando_atalho>: Irá excluir o alias que desejado


--- Abrir arquivo (não programa) e executar programa.
- open <arquivo>: vai abrir o ARQUIVO (não programa), fora do terminal, igual o Start-process do windows.
- ./<executavel>: Executa um programa.

-- Acesso a Jump | Login remoto do cliente:
- ssh: Login remoto do cliente
- ssh -l <login> <nome da maquina virtual>: acesso remoto da jump com as maquinas virtuais
- ssh <login>@<nome_da_maquina_virtual>: acesso remoto da jump com as maquinas virtuais de um jeito alternativo.
- telnet <ip_server>: Vai testar se o servidor consegue ser conectado, lembra um pouco ping pra ver se tem rota.
*Bonus: parametro -l significa login_name após do paramentro "l", por isso usamos -l (tem no <man ssh> os parametros)*

-- Acessar VDI remotamente (antes fazer a jump):
- ssh -i oci-pem ubuntu@<ipdaVDI>: Comando para acessar a vdi remotamente.
*Bonus: parametro -i significa identify_file após do parametro "i", por isso usamos -i a que oci.pem é um arquivo (tem no <man ssh> os parametros)*

--- Status do Sistema:

systemctl: Vai ver listar todos os sistemas que estão operando.
systemctl status <nome_do_sistema>: Vai trazer o status do sistema que foi informado.

-- Listagem de (PID)
- ps aux: Mostra as (PID) de TODOS os processos de TUDO, o recomendado é usar junto com o | grep para filtrar o processo e o (PID)
- ps axf: Mostra as (PID) de TODOS os processos de TUDO, em forma de arvore
- ps -ux: Mostra as (PID) de todos os processos do USUARIO, diferente do aux que mostra de tudo, | grep para filtrar o processo e o (PID)

--- Listagem de (PID) em tempo real.
- top: Mostra todos os processos listando o (PID) uso de memoria e tudo mais, como fosse um gerenciador de tarefa mesmo, diferente do ps que ele monitora em tempo real
- htop: Mostra todos os processos listando o (PID) uso de memoria e tudo mais em tempo real, a diferença do top, é que ele é mais rico e permite fechar programas também.

--- Abrir calculadora pelo terminal linux
- gnome-calculator: Abre a calculadora, o nome oficial da calculadora do ubuntu é gnome calculator.

--- Fechar programas
- pkill <programa_aberto>: fecha o programa, porém tem o risco de voce fechar o programa errado se escrever incompleto
- killall <programa_aberto>: fecha o programa, esse é mais seguro pois consegue fechar apenas se escrever exatamente certo o programa

--- Testar notificação

notify-send <mensagem_que_desejar>: Ira mostrar um pop-up de uma notificação que você escreveu.

--- Ordenar ou desordenar em ordem alfabetica e numerica

- sort: É um comando que consegue trazer de forma em ordem alfabetica as linhas ex: sort <arquivo>
- sort -r: Ele consegue deixar de forma invertida do sorte normal.
- sort -n: É um comando que traz em ordem alfabetica e em ordem númerica do menor para o maior.
- sort -c: Ele avisa se esta ordenado ou não.

--- Mudar atributos dos arquivos.

- chattr: Permite dar ou retirar um atributo oua um determinado arquivo, ou diretório. (ex: chattr +1 <arquivo>) *Lembrando que o i protege o arquivo até do usuario root, pra poder excluir/mover/editar o arquivo fica blindado só retirando i* e para tirar (ex: chattr -i <arquivo>)
- chattr +a: Ele blinda o arquivo para evitar que seja editado, permite apenas o append que é o ">>", caso utilizar o ">" ele não deixa, nem o vim.
- chattr +c: O arquivo será armazenado de forma compactada, ai quando o sistema abrir ele descompacta sozinho e executa, mas nem todos os linux tem suporte a isso.
- chattr +s: Ele é o atributo onde faz que o arquivo na hora de ser excluido demore mais, porém exclui de forma mais segura e completa.
- chattr +S: Ele faz que o arquivo que foi salvo seja instantaneamente salva no disco de forma assincrona e imediata, interessante usar em arquivo de extrema importancia.
- chattr +D: Ele faz que o diretório que foi salvo seja instantaneamente salva no disco de forma assincrona e imediata, interessante usar em diretório com arquivos de extrema importancia.
- chattr +d: Faz que o diretorio/arquivo com esse atributos nao sejam incluidos no backup dumb
- lsattr: Mostra os atributos dos arquivos, se for diretório vai mostrar de todos os arquivos/diretorio dentro dele também
- lsattr -d: Mostra os atributos do diretório, sem mostrar dos arquivos/diretorios dentro dele.

--- Filtrar coluna pelo separado.

cut -d "<delimitador" -f <numero_coluna> <arquivo>: É um comando que lembra o awk para conseguir filtrar o separados (ex: "cut -d "," -f 1 <arquivo>" vai filtrar apenas a primeira coluna.)

--- Primeiro Plano / Segundo plano

- fg <numero da fila>: É um comando que passa o que esta em segundo plano para primeiro
- jobs: É um comando que identifica o que está rodando em segundo plano (Um exemplo que fiz foi colocar um sleep 10, e depois executar o jobs, ele identificou que esta rodando em segundo plano)
- bg <numero da fila>: É um comando que passa para segundo plano (Quando estiver em primeiro plano voce da um Crtl+Z para parar, e depois manda o bg <numero da fila> pra deixar de background)
- kill %<numero da fila>: É um comando para matar o que esta em segundo plano. (Da pra matar também caso tiver em primeiro plano COM CRTL+C

--- Comando screen, tmux, perfeito para detachar e aumentar a produtividade

- screen: É um comando que você consegue criar outras telas para rodar simultaneamente como fosse uma aba. *Comando super interessante*

screen: criar sessão
CRTL+ a c: criar outra tela
CRTL+ a w: mostra quantas telas tem criadas
CRTL+ a a: alterna entre uma e outra tela
CRTL+ a <numero_da_screen>: alterna entre a sua tela e a screen desejada
CRTL+ a d: detachar a screen, para deixar ela executando de forma detachada como fosse em segundo plano, desconectada
screen -ls: consegue ver as screens que estão detachada no momento e mostra o seu PID
screen -x <PID>: Faz com que você reconecte com essa screen detachada.

- tmux: Semelhante ao screen

tmux new: Começa a sessão no tmux
CRTL+ b c: criar outra tela
CRTL+ b <numero_da_scren>: alterna entre a sua tela e a screen desejada
CRTL+ b d: detachar a screen, para deixar ela executando de forma detachada como fosse em segundo plano, desconectada
tmux ls: consegue ver as screens que estão detachada no momento
tmux attach: Faz com que você reconecte com essa screen detachada.
CRTL+ b ": Divide a screen ao meio na horizontal
CRTL+ b %: Divida a screen ao meio na vertical
CRTL+ pra cima: Troca para tela de cima
CRTL+ pra baixo: Troca para tela de baixo
CRTL+ pra esquerda: Troca para tela esquerda
CRTL+ pra direito: Troca para tela direita

--- Listando componentes de hardware

- lspci: Comando que lista todas os componentes que estão conectados no barramento PCI do PC.
- lspci -vv: Comando que lista todas os componentes que estão conectados no barramento PCI do PC, só que de forma MUITO mais detalhada que o lspci normal.
- lsusb: Comando que lista todas os componentes que estão conectados nas entradas USB do PC
- lshw: Comando que lista todos os componentes de hardwares que está conectado no PC em formato de árvore, desde placa mão, placa de video, processador, hd, ssd, e tudo mais. *BEM COMPLETO*



logar no mysql no trabalho: mysql -h <ip> -u <usuario> -p
-h significa host, -u significa usuario e -p significa password

docker exec -ti <ID_CONTAINER> bash

.bashrc é o arquivo oculto onde fica as configurações pre setadas do alias, conseguimos abrir ele com o vim, toda vez que damos ls, na real estamos dando ls --color=auto, pq é um alias.
cd ~/.bashrc
