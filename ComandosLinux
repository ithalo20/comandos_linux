Comandos FORA do terminal Linux:

Crtl+H: Usado em um diretório ele mostrará os arquivos ocultos.

Comandos no terminal Linux:

--- Comandos de Atalhos

Crtl+L: Limpa o terminal
Crtl+U: Apaga toda a linha que voce esta digitando
Crtl+D: Se voce entrar em alguma maquina, virar root, etc, o Crtl+D vai voltar um acesso antes, se n tiver dentro de nenhum acesso ele fecha o terminal.
Crtl+Shift+T: Abre mais uma aba de terminal.
Tab: Completa a palavra que você esta digitando

--- Manual de comandos e ajuda
- man <comando>: Exibe o manual do comando, (exemplo: man uname), vai exibir todo manual do uname
- <comando> --help: Abrirá a ajuda das outras variações do que o comando faz.

--- Informações do Sistema Operacional e Hardware
- uname -a: Exibe todas as informações do sistema
- neofetch: Mostra todas as informações de sistema e Hardware

--- Donwloads, instalações, listar atualizações, baixar e instalar atualizações e desinstalação (APT, APT-CACHE e DPKG)

- sudo apt install <pacote>: Ele busca o pacote nos repositórios oficiais do seu Linux, e caso ele exista, também busca as dependências dele, Então ele BAIXA esses pacotes (que vem com a extensão .deb) e  os INSTALA com o dpkg por baixo dos panos, LEMBRE-SE consigo baixar a dependencia solo, basta colocar o nome da dependencia no lugar do <pacote>
- sudo apt update: Atualiza as informações de software do seu PC
- sudo apt upgrade: Atualiza todos os softwares.
- sudo apt remove <nome_do_programa>: Desinstala o programa que você quiser, que foi instalado em apt.
- sudo apt update: Atualiza informações de software do seu PC, ele fica apenas CIENTE que tem atualizações como ele mapeasse as coisas novas, porém ele nao baixa e nem instala essas atualizações.
- sudo apt upgrade: Atualiza todos os softwares, usar após o APT UPDATE para listar as novas atualizações, ai damos um UPGRADE para baixar e instalar as novas atualizações.
- sudo apt update && sudo apt upgrade: É igual programação && significa "and", ira listar as atualizações do repositório e depois ira baixar e instalar as atualizações.

- sudo apt-cache search <pacote>: Procura os pacotes pelo nome, ai vai mostrar os pacotes disponiveis.
- sudo apt-cache show <pacote>: Mostrará as informações do pacote que você está pesquisando.

- sudo dpkg -i <pacote.deb>: Ira INSTALAR o pacote que vc fez download do (.deb) então ele instala esse arquivo LOCAL de seu PC, o -i é install package file.
- sudo dpkg -r <pacote.deb>: Irá REMOVER o pacote, -r é remove package file.
- sudo dpkg --purge <pacote. deb>: Irá REMOVER o pacotE e tambem REMOVERÁ TODOS OS RESTÍGIOS., caches e tudo mais (MAIS RECOMENDADO)
- sudo dpkg -l: Lista todos os pacotes instalados.

--- Troca de usuário, Desinstalação de programa, Execução sudo e Modo root
- sudo: é chamado para que um determinado comando seja executado como privilégio de super usuário, como fosse o administrador do Windows. sudo (super user direct order OU super user do)
- su: permite a troca de usuario, exemplo: su <ithalo>.
- sudo su: entra no modo root, super usuario.

--- Navegação de diretório
- "cd /": Vai para o diretório raiz.
- "cd" ou "cd ~": Vai para a home usuario, se vc ve ~ saiba que vc ta no seu usuario.
- "cd ..": Vai para um diretório antes do atual, ../.. irá dois diretorios antes, e assim consecutivamente.

--- Desligar e Reiniciar computador
- shutdown now: desliga o computador instantaneamente
- shutdown: desliga o pc dentro de 60 segundos
- shutdown hh:mm (ex: shutdown 12:00): Desliga o PC de forma agendada conforme o parametro passado
- shutdown +m (ex: shutdown +20): Vai desligar dentro do tempo que você passar, o +m significa minuto
- shutdown +m "Mensagem desejada": A ideia é a mesma do comando acima, a unica diferença será a mensagem mostrada
- OBS Sobre o shutdown: se colocar -r na frente será para reinicialização, -p desliga o sistema (também desliga a unidade).

--- Troca de senha
- passwd: muda a senha de usuario

--- Comparação de tamanho de arquivo
- cmp <arquivo1> <arquivo2>: compara o tamanho dos arquivos

--- Compara as modificações do arquivo
- diff <arquivo1> <arquivo2>: Compara linha por linha entre os dois arquivos e mostra as respectivas diferenças
- diff -b <arquivo1> <arquivo2>: Ignora espaço em branco como possível diferença.
- diff -i <arquivo1> <arquivo2>: Ele passa a não diferençar caracteres maiusculo e minúsculos.
- diff -q <arquivo1> <arquivo2>: Apenas diz se o arquivo é diferente, ele não trás retorno algum.

--- Calendario, data e hora.
- date: mostra a data atual, horario e o GMT que o sistema esta.
- date -s <mm/dd/yyyy>: altera a data mes, dia e ano.
- date -s <hh:mm:ss>: altera o horario
- cal: mostra o calendario
- ncal: mostra o calendario e o dia que estamos

--- Caminho, verificação de arquivos na pasta, localização de arquivo e filtragem.
- pwd: mostra o endereço/caminho que você está.
- ls: verifica todos os arquivos, lembre-se tem varintes como ls -la (ve arquivos oculto)
- ls <nome do diretorio>: para mostra o que tem nele, sem entrar (FUNCIONA COM AS OUTRAS VARIAÇÕES ABAIXO).
- ls -a: Mostra TODOS os arquivos até os ocultos, porém não mostra como o -la que no caso seria em linhas, pois o "-l" que faz ficar na forma de lista.
- ls -t: Mostra os arquivos em ordem de tempo de criação
- ls -r: Inverte a ordem.
- ls -h: Usado junto com o parametro "-l" ele mostra as informações como kilobytes, megabytes, gigabytes para facilitar a interpretação humana do tamanho do arquivo.
- ls -l: Mostra os arquivos em ordem de linha e ja com informações de permissões, data de ultima alteração, ordem alfabetica etc.
- ls -la: mostra TODOS os arquivos ja com as permissões, data de ultima alteração, ordem alfabética e o peso dos arquivos. por conta do parametro "-a" = all
- ls -lta: Mostra TODOS os arquivos inclusive ocultos em ordem tempo, por conta da parametro "-t", "-a" = all
- ls -ltr: Mostra os arquivos ja com as permissoes, peso dos arquivos, em ordem de DATA DE ALTERAÇÃO REVERSA, por conta do parametro "-t" = time, -r" = reverse
- ls -lh: mostra os arquivos ja com as permissões, data de alteração, em ordem alfabética e o peso dos arquivos em kilobytes, por conta do parametro "-h" que facilita a visão humana dos números.
- ls --color=auto: Ele vai colocar cores em arquivos respectivamente conforme o seu tipo (terminal ja faz isso automaticamente), temos outras variantes como --color=never para nunca colocar cores

- locate <nome do arquivo>: localiza o arquivo desejado, mostrando o endereço dele.
- | grep <Nome da Pesquisa>: Filtra a palavra que voce digitar apos o | grep

--- Criação de diretório, remoção de diretorio e arquivos, e move arquivo.
- mkdir: cria diretórios
- mkdir -p: consegue criar varios diretorios dentro do outro
- rm: Exclui diretorio, arquivos, etc
- rm -rf: força a exclusão de arquivos, diretorios, etc
- mv: consegue mover um arquivo ou modificar o nome, (ex mover: mv <arquivo> /endereço), (ex: renomear: mv <arquivo> <novoNomeDeArquivo>)


--- Copiar
- cp: Faz uma copia seja na mesma pasta, ou em algum outro endereço, -r é para diretorio (ex: cp <nome> <copia>)(ex: cp <nome> /endereço)(copia de diretorio ex: cp -r <nome> <nomedacopia>) (ex: cp -r <nome> /endereço)

- scp (Secure Copy): Mesma função do cp, a diferença fica que é usado para servidores, entao vc consegue jogar de uma maquina local para um servidor.
exemplo de scp: scp [other options] [source username@IP]:/[directory and file name] [destination username@IP]:/[destination directory]
		scp -p root@162.168.1.1:/media/scp.png edward@162.168.1.2:/desktop/destination


--- Consumo de memória, tamanho do arquivo, tamanho de disco
- free: Mostra a quantidade de GB consumido, lembre-se que tem variantes como, free -m (mb), free -g (gb), etc
- du: Mostra o tamanho do arquivo, diretorio, du -k (kb), du -m (mb), etc
- df: Mostra o tamanho do Disco, lembre-se tem variante como du -h (human), etc

--- Imprimir mensagem no terminal
- echo "mensagem": ira imprimir no terminal a mensagem que voce mandou após o echo.

--- Ler prosseguindo com teclado. 
- more: Assim como o cat ele mostra o texto do arquivo, porém a diferença é se tiver faltando espaço ele mostra -mais-, ai vc fica apertando enter pra mostrar linha por linha do que falta.
- more -5: vai mostrar a quantidade de linhas que eu pedi, poderia colocar mais linhas ou menos. (ex: more -10 <nome_arquivo> , vai mostrar 10 linhas do arquivo)
- more +5: vai apagar as quantidade de linhas que eu pedi (ex more +10 <nome_arquivo>, vai apagar as dez primeiras linhas do arquivo).

--- Ler primeiras linhas do arquivo
- head <arquivo>: Mostra as 10 primeiras linhas do arquivo
- head -5 <arquivo>: Mostra as primeiras quantidades de linhas desejadas do arquivo, nesse caso apareceria 5 primeiras linhas

--- Ler ultimas linhas do arquivo e também em tempo real 
- tail <arquivo>: Mostra as 10 ultimas linhas do arquivo
- tail -5: Mostra as ultimas quantidades de linhas desejadas do arquivo, nesse caso apareceria 5 ultimas linhas
- tail -f: Consegue ver as alterações em tempo real no terminal das ultimas 10 linhas.

--- Criar arquivo, editar arquivo e texto, ler arquivo, criar link-simbolico
- cat: Mostra o texto do arquivo, ou mostra o que tem dentro dele, caso n for texto.
- cat > <arquivo>: cria um texto, após digitar o seu texto aperta Crtl+C ou Crtl+Z
- touch <arquivo>: é usado para criar arquivos vazios, da para criar varios (ex: touch <arquivo1> <arquivo2> <arquivo3>) nesse exemplo iria criar 3 arquivos vazios
- vim <nome_do_arquivo>: consegue editar o arquivo, porém se não existir aquele arquivo, ele abre o editor e apos salvar ele cria o arquivo.
- nano (quase não uso): consegue editar e criar um arquivo também, porém não muito usado por ser estranho, preferencia as opções acima.
- ln -s <enereço_do_diretorio> <nome_do_link_simbolico>: Ira criar um link simbolico daquele endereço que você deseja, desde diretório até arquivos.

-- Setagem de comando
- alias: ele é um atalho para fazer um comando apenas digitando poucas coisas como, ll ele faz uma coisa e por ai vai.

--- Abrir arquivo (não programa)
- open <arquivo>: vai abrir o ARQUIVO (não programa), fora do terminal, igual o Start-process do windows.


-- Acesso a Jump | Login remoto do cliente:
- ssh: Login remoto do cliente
- ssh -l <login> <nome da maquina virtual>: acesso remoto da jump com as maquinas virtuais
- ssh <login>@<nome_da_maquina_virtual>: acesso remoto da jump com as maquinas virtuais de um jeito alternativo.
*Bonus: parametro -l significa login_name após do paramentro "l", por isso usamos -l (tem no <man ssh> os parametros)*

-- Acessar VDI remotamente (antes fazer a jump):
- ssh -i oci-pem ubuntu@<ipdaVDI>: Comando para acessar a vdi remotamente.
*Bonus: parametro -i significa identify_file após do parametro "i", por isso usamos -i a que oci.pem é um arquivo (tem no <man ssh> os parametros)*

--- Status do Sistema:

systemctl: Vai ver listar todos os sistemas que estão operando.
systemctl status <nome_do_sistema>: Vai trazer o status do sistema que foi informado.

-- Listagem de (PID)
- ps aux: Mostra as (PID) de TODOS os processos de TUDO, o recomendado é usar junto com o | grep para filtrar o processo e o (PID)
- ps axf: Mostra as (PID) de TODOS os processos de TUDO, em forma de arvore
- ps -ux: Mostra as (PID) de todos os processos do USUARIO, diferente do aux que mostra de tudo, | grep para filtrar o processo e o (PID)

--- Listagem de (PID) em tempo real.
- top: Mostra todos os processos listando o (PID) uso de memoria e tudo mais, como fosse um gerenciador de tarefa mesmo, diferente do ps que ele monitora em tempo real
- htop: Mostra todos os processos listando o (PID) uso de memoria e tudo mais em tempo real, a diferença do top, é que ele é mais rico e permite fechar programas também.

--- Abrir calculadora pelo terminal linux
- gnome-calculator: Abre a calculadora, o nome oficial da calculadora do ubuntu é gnome calculator.

--- Fechar programas
- pkill <programa_aberto>: fecha o programa, porém tem o risco de voce fechar o programa errado se escrever incompleto
- killall <programa_aberto>: fecha o programa, esse é mais seguro pois consegue fechar apenas se escrever exatamente certo o programa







.bashrc é o arquivo oculto onde fica as configurações pre setadas do alias, conseguimos abrir ele com o vim, toda vez que damos ls, na real estamos dando ls --color=auto, pq é um alias.
cd ~/.bashrc
